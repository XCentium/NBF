using Insite.Core.Interfaces.Data;
using Insite.Core.Interfaces.Dependency;
using Insite.Core.Plugins.Pipelines;
using Insite.Search.Elasticsearch.DocumentTypes.Product.Index.Pipelines.Parameters;
using Insite.Search.Elasticsearch.DocumentTypes.Product.Index.Pipelines.Results;

namespace Extensions.Handlers.GetIndexableProducts
{
    public sealed class GetIndexableProductsSqlStatementParts : IPipe<GetIndexableProductsParameter, GetIndexableProductsResult>, IMultiInstanceDependency, IDependency, IExtension
    {
        public const string IncrementalFilterSqlStatement = " AND p.IndexStatus = 1";
        public const string IndexableProductsSqlStatement = "\r\n        DECLARE @dateTimeNow DateTime\r\n        SELECT @dateTimeNow = GETUTCDATE()\r\n        DECLARE @defaultLanguageId NVARCHAR(50)\r\n        SELECT @defaultLanguageId = Id FROM [Language] WITH (NOLOCK) WHERE isdefault = 1\r\n\r\n        CREATE TABLE #Filters\r\n        (\r\n            LanguageId uniqueidentifier,\r\n            StyleParentId uniqueidentifier,\r\n            ProductId uniqueidentifier,\r\n            Filters nvarchar(max),\r\n            FilterNames nvarchar(max)\r\n        )\r\n\r\n        INSERT INTO #Filters (LanguageId,StyleParentId,ProductId,Filters,FilterNames)\r\n        SELECT\r\n            l.Id,\r\n            p.StyleParentId,\r\n            p.Id,\r\n            CONVERT (nvarchar(50),w.Id )\r\n                + CONVERT (nvarchar(50),av.Id ) + CHAR(254) +\r\n                + av.Value + CHAR(254)\r\n                + CONVERT (nvarchar(10),av.SortOrder ) + CHAR(254)\r\n                + CONVERT (nvarchar(50),a.Id ) + CHAR(254)\r\n                + a.Label + CHAR(254)\r\n                + CONVERT (nvarchar(10),(SELECT MAX(SortOrder) FROM CategoryAttributeType WITH (NOLOCK) WHERE AttributeTypeId = a.Id)) + CHAR(254)\r\n                + CONVERT (nvarchar(1),a.IsFilter )\r\n                AS Filters,\r\n            CONVERT (nvarchar(50),w.Id ) +\r\n            COALESCE(NULLIF(td.Translation, ''),av.Value) AS FilterNames\r\n        FROM ProductAttributeValue pav WITH (NOLOCK)\r\n        INNER JOIN AttributeValue av WITH (NOLOCK) ON av.Id = pav.AttributeValueId\r\n        INNER JOIN AttributeType a WITH (NOLOCK) ON av.AttributeTypeId = a.Id\r\n        INNER JOIN CategoryProduct cp WITH (NOLOCK) ON cp.ProductId = pav.ProductId\r\n        INNER JOIN CategoryAttributeType ca WITH (NOLOCK) ON ca.CategoryId = cp.CategoryId and ca.AttributeTypeId = a.Id\r\n        INNER JOIN Category c WITH (NOLOCK) ON c.Id = cp.CategoryId\r\n        INNER JOIN Product p WITH (NOLOCK) ON p.Id = pav.ProductId\r\n        INNER JOIN WebSite w WITH (NOLOCK) ON w.Id = c.WebSiteId\r\n        INNER JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        LEFT JOIN TranslationDictionary td WITH (NOLOCK) ON td.LanguageId = l.Id AND td.Keyword = av.Value AND td.Source = 'AttributeValue'\r\n        WHERE a.IsActive = 1 AND ca.IsActive = 1 AND av.IsActive = 1\r\n        AND c.ActivateOn <= @dateTimeNow AND (c.DeactivateOn IS NULL OR c.DeactivateOn > @dateTimeNow)\r\n        AND p.IndexStatus <> 2\r\n        and c.Name <> 'swatches'\r\n       {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_LanguageCode ON #Filters(LanguageId)\r\n        CREATE INDEX IDX_ProductId ON #Filters(ProductId)\r\n        CREATE INDEX IDX_StyleParentId ON #Filters(StyleParentId)\r\n\r\n        CREATE TABLE #CategoryTree\r\n        (\r\n            ProductId uniqueidentifier,\r\n            CategoryTree nvarchar(max),\r\n            CategoryTreeNames nvarchar(max),\r\n            LanguageId uniqueidentifier\r\n        )\r\n\r\n        INSERT INTO #CategoryTree (ProductId, CategoryTree, CategoryTreeNames, LanguageId)\r\n        SELECT\r\n            cp.ProductId,\r\n            case when ch1.Id is null then '' else convert(nvarchar(36), ch1.Id) end  + CHAR(255) +\r\n            case when ch2.Id is null then '' else convert(nvarchar(36), ch2.Id) end  + CHAR(255) +\r\n            case when ch3.Id is null then '' else convert(nvarchar(36), ch3.Id) end  + CHAR(255) +\r\n            case when ch4.Id is null then '' else convert(nvarchar(36), ch4.Id) end  + CHAR(255) +\r\n            case when ch5.Id is null then '' else convert(nvarchar(36), ch5.Id) end  + CHAR(255) +\r\n            case when ch6.Id is null then '' else convert(nvarchar(36), ch6.Id) end\r\n            as CategoryTree,\r\n            case when ch1.ShortDescription is null then '' else COALESCE(NULLIF(tp1.TranslatedValue,''), ch1.ShortDescription) + ' ' end  +\r\n            case when ch2.ShortDescription is null then '' else COALESCE(NULLIF(tp2.TranslatedValue,''), ch2.ShortDescription) + ' ' end  +\r\n            case when ch3.ShortDescription is null then '' else COALESCE(NULLIF(tp3.TranslatedValue,''), ch3.ShortDescription) + ' ' end  +\r\n            case when ch4.ShortDescription is null then '' else COALESCE(NULLIF(tp4.TranslatedValue,''), ch4.ShortDescription) + ' ' end  +\r\n            case when ch5.ShortDescription is null then '' else COALESCE(NULLIF(tp5.TranslatedValue,''), ch5.ShortDescription) + ' ' end  +\r\n            case when ch6.ShortDescription is null then '' else COALESCE(NULLIF(tp6.TranslatedValue,''), ch6.ShortDescription) + ' ' end\r\n            as CategoryTreeNames,\r\n            l.Id as LanguageId\r\n        FROM CategoryProduct cp WITH (NOLOCK)\r\n            INNER JOIN Product p on cp.ProductId = p.Id\r\n            INNER JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n            LEFT JOIN Category c WITH (NOLOCK) ON c.Id = cp.CategoryId\r\n            LEFT JOIN Category ch1 WITH (NOLOCK) ON cp.CategoryId = ch1.Id\r\n            LEFT JOIN Category ch2 WITH (NOLOCK) ON ch1.ParentId = ch2.Id\r\n            LEFT JOIN Category ch3 WITH (NOLOCK) ON ch2.ParentId = ch3.Id\r\n            LEFT JOIN Category ch4 WITH (NOLOCK) ON ch3.ParentId = ch4.Id\r\n            LEFT JOIN Category ch5 WITH (NOLOCK) ON ch4.ParentId = ch5.Id\r\n            LEFT JOIN Category ch6 WITH (NOLOCK) ON ch5.ParentId = ch6.Id\r\n            LEFT JOIN TranslationProperty tp1 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp1.ParentId = ch1.Id AND tp1.ParentTable = 'Category' AND tp1.LanguageId = l.Id AND tp1.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp2 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp2.ParentId = ch2.Id AND tp2.ParentTable = 'Category' AND tp2.LanguageId = l.Id AND tp2.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp3 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp3.ParentId = ch3.Id AND tp3.ParentTable = 'Category' AND tp3.LanguageId = l.Id AND tp3.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp4 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp4.ParentId = ch4.Id AND tp4.ParentTable = 'Category' AND tp4.LanguageId = l.Id AND tp4.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp5 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp5.ParentId = ch5.Id AND tp5.ParentTable = 'Category' AND tp5.LanguageId = l.Id AND tp5.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp6 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp6.ParentId = ch6.Id AND tp6.ParentTable = 'Category' AND tp6.LanguageId = l.Id AND tp6.Name = 'ShortDescription'\r\n        WHERE c.ActivateOn <= @dateTimeNow AND (c.DeactivateOn IS NULL OR c.DeactivateOn > @dateTimeNow)\r\n            AND (ch1.Id IS NULL OR (ch1.ActivateOn <= @dateTimeNow AND (ch1.DeactivateOn IS NULL OR ch1.DeactivateOn > @dateTimeNow)))\r\n            AND (ch2.Id IS NULL OR (ch2.ActivateOn <= @dateTimeNow AND (ch2.DeactivateOn IS NULL OR ch2.DeactivateOn > @dateTimeNow)))\r\n            AND (ch3.Id IS NULL OR (ch3.ActivateOn <= @dateTimeNow AND (ch3.DeactivateOn IS NULL OR ch3.DeactivateOn > @dateTimeNow)))\r\n            AND (ch4.Id IS NULL OR (ch4.ActivateOn <= @dateTimeNow AND (ch4.DeactivateOn IS NULL OR ch4.DeactivateOn > @dateTimeNow)))\r\n            AND (ch5.Id IS NULL OR (ch5.ActivateOn <= @dateTimeNow AND (ch5.DeactivateOn IS NULL OR ch5.DeactivateOn > @dateTimeNow)))\r\n            AND (ch6.Id IS NULL OR (ch6.ActivateOn <= @dateTimeNow AND (ch6.DeactivateOn IS NULL OR ch6.DeactivateOn > @dateTimeNow)))\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #CategoryTree(ProductId,LanguageId)\r\n\r\n        CREATE TABLE #CategoryInfo\r\n        (\r\n            LanguageId uniqueidentifier,\r\n            ProductId uniqueidentifier,\r\n            CategoryId nvarchar(40),\r\n            PersonaId nvarchar(40),\r\n            WebSiteId nvarchar(40),\r\n            ShortDescription nvarchar(max),\r\n            ProductSearchBoost decimal(18,5)\r\n        )\r\n\r\n        INSERT INTO #CategoryInfo (LanguageId, ProductId, CategoryId, PersonaId, WebSiteId, ShortDescription, ProductSearchBoost)\r\n        SELECT\r\n            l.Id,\r\n            cp.ProductId,\r\n            CAST(c.Id AS NVARCHAR(40)) AS CategoryId,\r\n            CAST(per.Id AS NVARCHAR(40)) As PersonaId,\r\n            CAST(c.WebSiteId AS NVARCHAR(40)) AS WebSiteId,\r\n            COALESCE(NULLIF(tp.TranslatedValue,''), c.ShortDescription) AS ShortDescription,\r\n            c.ProductSearchBoost\r\n        FROM Category c WITH (NOLOCK)\r\n        INNER JOIN CategoryProduct cp WITH (NOLOCK) ON cp.CategoryId = c.Id\r\n        INNER JOIN Product p WITH (NOLOCK) ON p.Id = cp.ProductId\r\n        INNER JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        LEFT JOIN Category ch1 WITH (NOLOCK) ON cp.CategoryId = ch1.Id\r\n        LEFT JOIN Category ch2 WITH (NOLOCK) ON ch1.ParentId = ch2.Id\r\n        LEFT JOIN Category ch3 WITH (NOLOCK) ON ch2.ParentId = ch3.Id\r\n        LEFT JOIN Category ch4 WITH (NOLOCK) ON ch3.ParentId = ch4.Id\r\n        LEFT JOIN Category ch5 WITH (NOLOCK) ON ch4.ParentId = ch5.Id\r\n        LEFT JOIN Category ch6 WITH (NOLOCK) ON ch5.ParentId = ch6.Id\r\n        LEFT JOIN CategoryPersonaExtended cper WITH (NOLOCK) ON cper.CategoryId = c.Id\r\n        LEFT JOIN Persona per WITH (NOLOCK) ON per.Id = cper.PersonaId\r\n        LEFT JOIN TranslationProperty tp WITH (INDEX([IX_TranslationProperty_NaturalKey])) ON tp.ParentId = c.Id AND tp.ParentTable = 'Category' AND tp.LanguageId = l.Id AND tp.Name = 'ShortDescription'\r\n        WHERE c.ActivateOn <= @dateTimeNow AND (c.DeactivateOn IS NULL OR c.DeactivateOn > @dateTimeNow)\r\n            AND (ch1.Id IS NULL OR (ch1.ActivateOn <= @dateTimeNow AND (ch1.DeactivateOn IS NULL OR ch1.DeactivateOn > @dateTimeNow)))\r\n            AND (ch2.Id IS NULL OR (ch2.ActivateOn <= @dateTimeNow AND (ch2.DeactivateOn IS NULL OR ch2.DeactivateOn > @dateTimeNow)))\r\n            AND (ch3.Id IS NULL OR (ch3.ActivateOn <= @dateTimeNow AND (ch3.DeactivateOn IS NULL OR ch3.DeactivateOn > @dateTimeNow)))\r\n            AND (ch4.Id IS NULL OR (ch4.ActivateOn <= @dateTimeNow AND (ch4.DeactivateOn IS NULL OR ch4.DeactivateOn > @dateTimeNow)))\r\n            AND (ch5.Id IS NULL OR (ch5.ActivateOn <= @dateTimeNow AND (ch5.DeactivateOn IS NULL OR ch5.DeactivateOn > @dateTimeNow)))\r\n            AND (ch6.Id IS NULL OR (ch6.ActivateOn <= @dateTimeNow AND (ch6.DeactivateOn IS NULL OR ch6.DeactivateOn > @dateTimeNow)))\r\n        AND p.IndexStatus <> 2\r\n        AND p.ActivateOn <= @dateTimeNow\r\n        AND (p.DeactivateOn IS NULL OR p.DeactivateOn > @dateTimeNow)\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #CategoryInfo(LanguageId, ProductId, ProductSearchBoost)\r\n\r\n\r\n        CREATE TABLE #ProductContent\r\n        (\r\n            LanguageCode nvarchar(50),\r\n            ProductId uniqueidentifier,\r\n            Html nvarchar(max),\r\n            QtyOnHand int\r\n        )\r\n\r\n        INSERT INTO #ProductContent (LanguageCode, ProductId, Html, QtyOnHand)\r\n        SELECT\r\n            l.LanguageCode,\r\n            p.Id,\r\n            (SELECT TOP 1\r\n                c.Html\r\n            FROM [Content] c WITH (NOLOCK)\r\n            WHERE c.ContentManagerId = p.ContentManagerId AND NOT c.PublishToProductionOn IS NULL AND c.PublishToProductionOn <= @dateTimeNow\r\n            AND (c.LanguageId = l.Id or c.LanguageId = @defaultLanguageId)\r\n                ORDER BY\r\n                    CASE WHEN c.LanguageId = l.Id THEN 0 ELSE 1 END,\r\n                    c.PublishToProductionOn DESC)\r\n            AS Html,\r\n            (SELECT SUM(pw.ErpQtyAvailable - pw.QtyOnOrder)\r\n            FROM [ProductWarehouse] pw\r\n            WHERE p.Id = pw.ProductId)\r\n            AS QtyOnHand\r\n        FROM Product p WITH (NOLOCK)\r\n        JOIN ContentManager cm WITH (NOLOCK) ON cm.Id = p.ContentManagerId\r\n        JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        WHERE p.IndexStatus <> 2\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #ProductContent(LanguageCode, ProductId)\r\n\r\n        CREATE TABLE #SpecificationContent\r\n        (\r\n            LanguageCode nvarchar(50),\r\n            ProductId uniqueidentifier,\r\n            Html nvarchar(max)\r\n        )\r\n\r\n        INSERT INTO #SpecificationContent (LanguageCode, ProductId, Html)\r\n        SELECT\r\n            l.LanguageCode,\r\n            s.ProductId,\r\n            (SELECT TOP 1\r\n                c.Html\r\n            FROM [Content] c WITH (NOLOCK)\r\n            WHERE c.ContentManagerId = s.ContentManagerId AND NOT c.PublishToProductionOn IS NULL AND c.PublishToProductionOn <= @dateTimeNow\r\n            AND (c.LanguageId = l.Id or c.LanguageId = @defaultLanguageId)\r\n                ORDER BY\r\n                    CASE WHEN c.LanguageId = l.Id THEN 0 ELSE 1 END,\r\n                    c.PublishToProductionOn DESC)\r\n            AS Html\r\n        FROM Specification s WITH (NOLOCK)\r\n        JOIN Product p WITH (NOLOCK) ON p.Id = s.ProductId\r\n        JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        WHERE p.IndexStatus <> 2\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #SpecificationContent(LanguageCode, ProductId)\r\n\r\n        SELECT\r\n            l.LanguageCode,\r\n            --p.Id,\r\n            p.Id AS ProductId,\r\n            p.Name,\r\n            p.ERPNumber,\r\n            ISNULL(NULLIF(ptp.TranslatedValue,''), ISNULL(NULLIF(p.ShortDescription,''), p.erpdescription)) as ShortDescription,\r\n            p.SortOrder,\r\n            p.SearchBoost,\r\n            (SELECT top 1 ProductSearchBoost FROM #CategoryInfo c WHERE c.LanguageId = l.Id AND c.ProductId = p.Id order by ProductSearchBoost desc) as CategorySearchBoost,\r\n            p.ManufacturerItem,\r\n            (SELECT top 1 MediumImagePath FROM ProductImage pi WHERE pi.ProductId = p.Id ORDER BY pi.SortOrder) as MediumImagePath,\r\n            (SELECT top 1 (CASE WHEN SmallImagePath = '' THEN MediumImagePath ELSE SmallImagePath END) FROM ProductImage pi WHERE pi.ProductId = p.Id ORDER BY pi.SortOrder) as SmallImagePath,\r\n            p.UnitOfMeasure,\r\n            p.BasicListPrice,\r\n            p.BasicSalePrice,\r\n            p.BasicSaleStartDate,\r\n            p.BasicSaleEndDate,\r\n            p.ShippingWeight,\r\n            p.ActivateOn,\r\n            p.DeactivateOn,\r\n            p.SearchLookup,\r\n            p.DefaultVisibility,\r\n            p.UrlSegment,\r\n            p.ModifiedOn,\r\n            p.IsSponsored,\r\n            p.ProductCode,\r\n            p.ErpDescription,\r\n            p.MetaDescription,\r\n            p.MetaKeywords,\r\n            p.PageTitle,\r\n            p.ModelNumber,\r\n            p.Sku,\r\n            p.UpcCode,\r\n            p.Unspsc,\r\n            p.PackDescription,\r\n            p.UnitOfMeasureDescription,\r\n            (SELECT TOP 1 CONCAT(v.Name, ' ', v.VendorNumber) FROM Vendor v WHERE v.Id = p.VendorId) as Vendor,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT CHAR(255) + d.Name AS [text()]\r\n                        FROM Document d\r\n                        WHERE d.ParentId = p.Id\r\n                        FOR XML PATH ('')),\r\n                        ' '),\r\n                1, 1, '') AS DocumentNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT CHAR(255) + pi.AltText AS [text()]\r\n                        FROM ProductImage pi\r\n                        WHERE pi.ProductId = p.Id\r\n                        FOR XML PATH ('')),\r\n                        ' '),\r\n                1, 1, '') AS ImageAltText,\r\n            ISNULL(\r\n                (SELECT top 1 puom.QtyPerBaseUnitOfMeasure\r\n                    FROM ProductUnitOfMeasure puom\r\n                    WHERE puom.ProductId = p.Id AND puom.IsDefault = 1),\r\n                1) \r\n            *\r\n            (CASE\r\n                WHEN NOT p.BasicSaleStartDate IS NULL AND p.BasicSaleStartDate < @dateTimeNow AND (p.BasicSaleEndDate IS NULL OR p.BasicSaleEndDate > @dateTimeNow) THEN p.BasicSalePrice\r\n                ELSE p.BasicListPrice\r\n            END) AS Price,\r\n            (CASE WHEN (p.BasicListPrice <> 0) AND (p.IsConfigured = 0 OR p.IsFixedConfiguration = 1) AND (p.ConfigurationObjectId IS NULL) THEN\r\n                (CASE WHEN NOT p.BasicSaleStartDate IS NULL AND p.BasicSaleStartDate < @dateTimeNow AND (p.BasicSaleEndDate IS NULL OR p.BasicSaleEndDate > @dateTimeNow) THEN\r\n                    (CASE WHEN p.BasicSalePrice >= 10 THEN\r\n                        CAST(p.BasicSalePrice - p.BasicSalePrice % POWER(10,ROUND(LOG10(p.BasicSalePrice),0,1))as int)\r\n                    ELSE 0 END)\r\n                ELSE\r\n                    (CASE WHEN p.BasicListPrice >= 10 THEN\r\n                        CAST(p.BasicListPrice - p.BasicListPrice % POWER(10,ROUND(LOG10(p.BasicListPrice),0,1))as int)\r\n                    ELSE 0 END)\r\n                END)\r\n            ELSE null\r\n            END) AS PriceFacet,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + c.CategoryId + c.WebSiteId + c.ShortDescription AS [text()]\r\n                    FROM #CategoryInfo c\r\n                    WHERE c.LanguageId = l.Id AND c.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Categories,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + c.PersonaId AS [text()]\r\n                    FROM #CategoryInfo c\r\n                    WHERE c.LanguageId = l.Id AND c.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Personas,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + ct.CategoryTreeNames AS [text()]\r\n                    FROM #CategoryTree ct\r\n                    WHERE ct.ProductId = p.Id and ct.LanguageId = l.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS CategoryNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CategoryTree AS [text()]\r\n                    FROM #CategoryTree ct\r\n                    WHERE ct.ProductId = p.Id and ct.LanguageId = l.Id\r\n                    FOR XML PATH ('')),\r\n                     ' '),\r\n                1, 1, '') AS CategoryTree,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + c.WebSiteId AS [text()]\r\n                    FROM #CategoryInfo c\r\n                    WHERE c.LanguageId = l.Id AND c.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Websites,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT DISTINCT\r\n                        CHAR(255) + Filters AS [text()]\r\n                    FROM #Filters f\r\n                    WHERE (f.StyleParentId is null AND f.LanguageId = l.Id AND f.ProductId = p.Id) OR (f.StyleParentId is not null AND f.LanguageId = l.Id AND (f.ProductId = p.Id OR f.StyleParentId = p.Id))\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Filters,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT DISTINCT\r\n                        CHAR(255) + FilterNames AS [text()]\r\n                    FROM #Filters f\r\n                    WHERE (f.StyleParentId is null AND f.LanguageId = l.Id AND f.ProductId = p.Id) OR (f.StyleParentId is not null AND f.LanguageId = l.Id AND (f.ProductId = p.Id OR f.StyleParentId = p.Id))\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS FilterNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + sp.Name + CHAR(255) + sp.ERPNumber + CHAR(255) + sp.ManufacturerItem + CHAR(255) + stv.Value + CHAR(255) + st.Name + CHAR(255) + st.Description + CHAR(255) + sp.ProductCode + CHAR(255) + sp.ModelNumber AS [text()]\r\n                    FROM Product sp WITH (NOLOCK)\r\n                    INNER JOIN StyleTraitValueProduct stvp WITH (NOLOCK) on stvp.ProductId = sp.Id\r\n                    INNER JOIN StyleTraitValue stv WITH (NOLOCK) on stv.Id = stvp.StyleTraitValueId\r\n                    INNER JOIN StyleTrait st WITH (NOLOCK) on st.Id = stv.StyleTraitId\r\n                    WHERE sp.StyleParentId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS StyledChildren,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CAST(cp.CustomerId AS NVARCHAR(40)) + cp.Name AS [text()]\r\n                    FROM CustomerProduct cp WITH (NOLOCK)\r\n                    WHERE cp.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS CustomerNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CAST(cp.CustomerId AS NVARCHAR(40)) AS [text()]\r\n                    FROM CustomerProduct cp WITH (NOLOCK)\r\n                    WHERE cp.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Customers,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CAST(rgp.RestrictionGroupId AS NVARCHAR(40)) AS [text()]\r\n                    FROM RestrictionGroupProduct rgp WITH (NOLOCK)\r\n                    WHERE rgp.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS RestrictionGroups,\r\n            ISNULL(pc.Html, ' ') AS Content,\r\n            ISNULL(\r\n                (SELECT\r\n                    ' ' + c.Html AS [text()] FROM #SpecificationContent c\r\n                WHERE c.LanguageCode = l.LanguageCode AND c.ProductId = p.Id\r\n                FOR XML PATH ('')),\r\n                ' ') AS Specifications,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT CONCAT(CHAR(255), pp.Name, CHAR(254), pp.Value)\r\n                        FROM CustomProperty pp WITH (NOLOCK)\r\n                        WHERE pp.ParentId = p.Id\r\n                        FOR XML PATH ('')),\r\n                        ' '),\r\n                1, 1, '') AS CustomProperties\r\n            {0} -- CustomFields\r\n            FROM Product p WITH (NOLOCK)\r\n            JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n            LEFT JOIN TranslationProperty ptp WITH (NOLOCK) ON ptp.LanguageId = l.Id AND ptp.ParentId = p.Id AND ptp.Name = 'ShortDescription'\r\n            LEFT JOIN #ProductContent pc ON pc.LanguageCode = l.LanguageCode AND pc.ProductId = p.Id\r\n            WHERE p.StyleParentId IS NULL\r\n            AND (p.DeactivateOn IS NULL OR p.DeactivateOn > @dateTimeNow)\r\n            AND p.IndexStatus <> 2\r\n            AND (p.IsDiscontinued = 0 OR (pc.QtyOnHand > 0 AND p.TrackInventory = 1))\r\n            {1}\r\n            OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n            DROP TABLE #Filters\r\n            DROP TABLE #CategoryTree\r\n            DROP TABLE #CategoryInfo\r\n            DROP TABLE #ProductContent\r\n            DROP TABLE #SpecificationContent\r\n            ";

        public int Order
        {
            get
            {
                return 105;
            }
        }

        public GetIndexableProductsResult Execute(IUnitOfWork unitOfWork, GetIndexableProductsParameter parameter, GetIndexableProductsResult result)
        {
            result.SqlStatement = "\r\n        DECLARE @dateTimeNow DateTime\r\n        SELECT @dateTimeNow = GETUTCDATE()\r\n        DECLARE @defaultLanguageId NVARCHAR(50)\r\n        SELECT @defaultLanguageId = Id FROM [Language] WITH (NOLOCK) WHERE isdefault = 1\r\n\r\n        CREATE TABLE #Filters\r\n        (\r\n            LanguageId uniqueidentifier,\r\n            StyleParentId uniqueidentifier,\r\n            ProductId uniqueidentifier,\r\n            Filters nvarchar(max),\r\n            FilterNames nvarchar(max)\r\n        )\r\n\r\n        INSERT INTO #Filters (LanguageId,StyleParentId,ProductId,Filters,FilterNames)\r\n        SELECT\r\n            l.Id,\r\n            p.StyleParentId,\r\n            p.Id,\r\n            CONVERT (nvarchar(50),w.Id )\r\n                + CONVERT (nvarchar(50),av.Id ) + CHAR(254) +\r\n                + av.Value + CHAR(254)\r\n                + CONVERT (nvarchar(10),av.SortOrder ) + CHAR(254)\r\n                + CONVERT (nvarchar(50),a.Id ) + CHAR(254)\r\n                + a.Label + CHAR(254)\r\n                + CONVERT (nvarchar(10),(SELECT MAX(SortOrder) FROM CategoryAttributeType WITH (NOLOCK) WHERE AttributeTypeId = a.Id)) + CHAR(254)\r\n                + CONVERT (nvarchar(1),a.IsFilter )\r\n                AS Filters,\r\n            CONVERT (nvarchar(50),w.Id ) +\r\n            COALESCE(NULLIF(td.Translation, ''),av.Value) AS FilterNames\r\n        FROM ProductAttributeValue pav WITH (NOLOCK)\r\n        INNER JOIN AttributeValue av WITH (NOLOCK) ON av.Id = pav.AttributeValueId\r\n        INNER JOIN AttributeType a WITH (NOLOCK) ON av.AttributeTypeId = a.Id\r\n        INNER JOIN CategoryProduct cp WITH (NOLOCK) ON cp.ProductId = pav.ProductId\r\n        INNER JOIN CategoryAttributeType ca WITH (NOLOCK) ON ca.CategoryId = cp.CategoryId and ca.AttributeTypeId = a.Id\r\n        INNER JOIN Category c WITH (NOLOCK) ON c.Id = cp.CategoryId\r\n        INNER JOIN Product p WITH (NOLOCK) ON p.Id = pav.ProductId\r\n        INNER JOIN WebSite w WITH (NOLOCK) ON w.Id = c.WebSiteId\r\n        INNER JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        LEFT JOIN TranslationDictionary td WITH (NOLOCK) ON td.LanguageId = l.Id AND td.Keyword = av.Value AND td.Source = 'AttributeValue'\r\n        WHERE a.IsActive = 1 AND ca.IsActive = 1 AND av.IsActive = 1\r\n        AND c.ActivateOn <= @dateTimeNow AND (c.DeactivateOn IS NULL OR c.DeactivateOn > @dateTimeNow)\r\n        AND p.IndexStatus <> 2\r\n    and c.Name <> 'swatches'\r\n     {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_LanguageCode ON #Filters(LanguageId)\r\n        CREATE INDEX IDX_ProductId ON #Filters(ProductId)\r\n        CREATE INDEX IDX_StyleParentId ON #Filters(StyleParentId)\r\n\r\n        CREATE TABLE #CategoryTree\r\n        (\r\n            ProductId uniqueidentifier,\r\n            CategoryTree nvarchar(max),\r\n            CategoryTreeNames nvarchar(max),\r\n            LanguageId uniqueidentifier\r\n        )\r\n\r\n        INSERT INTO #CategoryTree (ProductId, CategoryTree, CategoryTreeNames, LanguageId)\r\n        SELECT\r\n            cp.ProductId,\r\n            case when ch1.Id is null then '' else convert(nvarchar(36), ch1.Id) end  + CHAR(255) +\r\n            case when ch2.Id is null then '' else convert(nvarchar(36), ch2.Id) end  + CHAR(255) +\r\n            case when ch3.Id is null then '' else convert(nvarchar(36), ch3.Id) end  + CHAR(255) +\r\n            case when ch4.Id is null then '' else convert(nvarchar(36), ch4.Id) end  + CHAR(255) +\r\n            case when ch5.Id is null then '' else convert(nvarchar(36), ch5.Id) end  + CHAR(255) +\r\n            case when ch6.Id is null then '' else convert(nvarchar(36), ch6.Id) end\r\n            as CategoryTree,\r\n            case when ch1.ShortDescription is null then '' else COALESCE(NULLIF(tp1.TranslatedValue,''), ch1.ShortDescription) + ' ' end  +\r\n            case when ch2.ShortDescription is null then '' else COALESCE(NULLIF(tp2.TranslatedValue,''), ch2.ShortDescription) + ' ' end  +\r\n            case when ch3.ShortDescription is null then '' else COALESCE(NULLIF(tp3.TranslatedValue,''), ch3.ShortDescription) + ' ' end  +\r\n            case when ch4.ShortDescription is null then '' else COALESCE(NULLIF(tp4.TranslatedValue,''), ch4.ShortDescription) + ' ' end  +\r\n            case when ch5.ShortDescription is null then '' else COALESCE(NULLIF(tp5.TranslatedValue,''), ch5.ShortDescription) + ' ' end  +\r\n            case when ch6.ShortDescription is null then '' else COALESCE(NULLIF(tp6.TranslatedValue,''), ch6.ShortDescription) + ' ' end\r\n            as CategoryTreeNames,\r\n            l.Id as LanguageId\r\n        FROM CategoryProduct cp WITH (NOLOCK)\r\n            INNER JOIN Product p on cp.ProductId = p.Id\r\n            INNER JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n            LEFT JOIN Category c WITH (NOLOCK) ON c.Id = cp.CategoryId\r\n            LEFT JOIN Category ch1 WITH (NOLOCK) ON cp.CategoryId = ch1.Id\r\n            LEFT JOIN Category ch2 WITH (NOLOCK) ON ch1.ParentId = ch2.Id\r\n            LEFT JOIN Category ch3 WITH (NOLOCK) ON ch2.ParentId = ch3.Id\r\n            LEFT JOIN Category ch4 WITH (NOLOCK) ON ch3.ParentId = ch4.Id\r\n            LEFT JOIN Category ch5 WITH (NOLOCK) ON ch4.ParentId = ch5.Id\r\n            LEFT JOIN Category ch6 WITH (NOLOCK) ON ch5.ParentId = ch6.Id\r\n            LEFT JOIN TranslationProperty tp1 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp1.ParentId = ch1.Id AND tp1.ParentTable = 'Category' AND tp1.LanguageId = l.Id AND tp1.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp2 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp2.ParentId = ch2.Id AND tp2.ParentTable = 'Category' AND tp2.LanguageId = l.Id AND tp2.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp3 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp3.ParentId = ch3.Id AND tp3.ParentTable = 'Category' AND tp3.LanguageId = l.Id AND tp3.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp4 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp4.ParentId = ch4.Id AND tp4.ParentTable = 'Category' AND tp4.LanguageId = l.Id AND tp4.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp5 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp5.ParentId = ch5.Id AND tp5.ParentTable = 'Category' AND tp5.LanguageId = l.Id AND tp5.Name = 'ShortDescription'\r\n            LEFT JOIN TranslationProperty tp6 WITH (NOLOCK, INDEX([IX_TranslationProperty_NaturalKey])) ON tp6.ParentId = ch6.Id AND tp6.ParentTable = 'Category' AND tp6.LanguageId = l.Id AND tp6.Name = 'ShortDescription'\r\n        WHERE c.ActivateOn <= @dateTimeNow AND (c.DeactivateOn IS NULL OR c.DeactivateOn > @dateTimeNow)\r\n            AND (ch1.Id IS NULL OR (ch1.ActivateOn <= @dateTimeNow AND (ch1.DeactivateOn IS NULL OR ch1.DeactivateOn > @dateTimeNow)))\r\n            AND (ch2.Id IS NULL OR (ch2.ActivateOn <= @dateTimeNow AND (ch2.DeactivateOn IS NULL OR ch2.DeactivateOn > @dateTimeNow)))\r\n            AND (ch3.Id IS NULL OR (ch3.ActivateOn <= @dateTimeNow AND (ch3.DeactivateOn IS NULL OR ch3.DeactivateOn > @dateTimeNow)))\r\n            AND (ch4.Id IS NULL OR (ch4.ActivateOn <= @dateTimeNow AND (ch4.DeactivateOn IS NULL OR ch4.DeactivateOn > @dateTimeNow)))\r\n            AND (ch5.Id IS NULL OR (ch5.ActivateOn <= @dateTimeNow AND (ch5.DeactivateOn IS NULL OR ch5.DeactivateOn > @dateTimeNow)))\r\n            AND (ch6.Id IS NULL OR (ch6.ActivateOn <= @dateTimeNow AND (ch6.DeactivateOn IS NULL OR ch6.DeactivateOn > @dateTimeNow)))\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #CategoryTree(ProductId,LanguageId)\r\n\r\n        CREATE TABLE #CategoryInfo\r\n        (\r\n            LanguageId uniqueidentifier,\r\n            ProductId uniqueidentifier,\r\n            CategoryId nvarchar(40),\r\n            PersonaId nvarchar(40),\r\n            WebSiteId nvarchar(40),\r\n            ShortDescription nvarchar(max),\r\n            ProductSearchBoost decimal(18,5)\r\n        )\r\n\r\n        INSERT INTO #CategoryInfo (LanguageId, ProductId, CategoryId, PersonaId, WebSiteId, ShortDescription, ProductSearchBoost)\r\n        SELECT\r\n            l.Id,\r\n            cp.ProductId,\r\n            CAST(c.Id AS NVARCHAR(40)) AS CategoryId,\r\n            CAST(per.Id AS NVARCHAR(40)) As PersonaId,\r\n            CAST(c.WebSiteId AS NVARCHAR(40)) AS WebSiteId,\r\n            COALESCE(NULLIF(tp.TranslatedValue,''), c.ShortDescription) AS ShortDescription,\r\n            c.ProductSearchBoost\r\n        FROM Category c WITH (NOLOCK)\r\n        INNER JOIN CategoryProduct cp WITH (NOLOCK) ON cp.CategoryId = c.Id\r\n        INNER JOIN Product p WITH (NOLOCK) ON p.Id = cp.ProductId\r\n        INNER JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        LEFT JOIN Category ch1 WITH (NOLOCK) ON cp.CategoryId = ch1.Id\r\n        LEFT JOIN Category ch2 WITH (NOLOCK) ON ch1.ParentId = ch2.Id\r\n        LEFT JOIN Category ch3 WITH (NOLOCK) ON ch2.ParentId = ch3.Id\r\n        LEFT JOIN Category ch4 WITH (NOLOCK) ON ch3.ParentId = ch4.Id\r\n        LEFT JOIN Category ch5 WITH (NOLOCK) ON ch4.ParentId = ch5.Id\r\n        LEFT JOIN Category ch6 WITH (NOLOCK) ON ch5.ParentId = ch6.Id\r\n        LEFT JOIN CategoryPersonaExtended cper WITH (NOLOCK) ON cper.CategoryId = c.Id\r\n        LEFT JOIN Persona per WITH (NOLOCK) ON per.Id = cper.PersonaId\r\n        LEFT JOIN TranslationProperty tp WITH (INDEX([IX_TranslationProperty_NaturalKey])) ON tp.ParentId = c.Id AND tp.ParentTable = 'Category' AND tp.LanguageId = l.Id AND tp.Name = 'ShortDescription'\r\n        WHERE c.ActivateOn <= @dateTimeNow AND (c.DeactivateOn IS NULL OR c.DeactivateOn > @dateTimeNow)\r\n            AND (ch1.Id IS NULL OR (ch1.ActivateOn <= @dateTimeNow AND (ch1.DeactivateOn IS NULL OR ch1.DeactivateOn > @dateTimeNow)))\r\n            AND (ch2.Id IS NULL OR (ch2.ActivateOn <= @dateTimeNow AND (ch2.DeactivateOn IS NULL OR ch2.DeactivateOn > @dateTimeNow)))\r\n            AND (ch3.Id IS NULL OR (ch3.ActivateOn <= @dateTimeNow AND (ch3.DeactivateOn IS NULL OR ch3.DeactivateOn > @dateTimeNow)))\r\n            AND (ch4.Id IS NULL OR (ch4.ActivateOn <= @dateTimeNow AND (ch4.DeactivateOn IS NULL OR ch4.DeactivateOn > @dateTimeNow)))\r\n            AND (ch5.Id IS NULL OR (ch5.ActivateOn <= @dateTimeNow AND (ch5.DeactivateOn IS NULL OR ch5.DeactivateOn > @dateTimeNow)))\r\n            AND (ch6.Id IS NULL OR (ch6.ActivateOn <= @dateTimeNow AND (ch6.DeactivateOn IS NULL OR ch6.DeactivateOn > @dateTimeNow)))\r\n        AND p.IndexStatus <> 2\r\n        AND p.ActivateOn <= @dateTimeNow\r\n        AND (p.DeactivateOn IS NULL OR p.DeactivateOn > @dateTimeNow)\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #CategoryInfo(LanguageId, ProductId, ProductSearchBoost)\r\n\r\n\r\n        CREATE TABLE #ProductContent\r\n        (\r\n            LanguageCode nvarchar(50),\r\n            ProductId uniqueidentifier,\r\n            Html nvarchar(max),\r\n            QtyOnHand int\r\n        )\r\n\r\n        INSERT INTO #ProductContent (LanguageCode, ProductId, Html, QtyOnHand)\r\n        SELECT\r\n            l.LanguageCode,\r\n            p.Id,\r\n            (SELECT TOP 1\r\n                c.Html\r\n            FROM [Content] c WITH (NOLOCK)\r\n            WHERE c.ContentManagerId = p.ContentManagerId AND NOT c.PublishToProductionOn IS NULL AND c.PublishToProductionOn <= @dateTimeNow\r\n            AND (c.LanguageId = l.Id or c.LanguageId = @defaultLanguageId)\r\n                ORDER BY\r\n                    CASE WHEN c.LanguageId = l.Id THEN 0 ELSE 1 END,\r\n                    c.PublishToProductionOn DESC)\r\n            AS Html,\r\n            (SELECT SUM(pw.ErpQtyAvailable - pw.QtyOnOrder)\r\n            FROM [ProductWarehouse] pw\r\n            WHERE p.Id = pw.ProductId)\r\n            AS QtyOnHand\r\n        FROM Product p WITH (NOLOCK)\r\n        JOIN ContentManager cm WITH (NOLOCK) ON cm.Id = p.ContentManagerId\r\n        JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        WHERE p.IndexStatus <> 2\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #ProductContent(LanguageCode, ProductId)\r\n\r\n        CREATE TABLE #SpecificationContent\r\n        (\r\n            LanguageCode nvarchar(50),\r\n            ProductId uniqueidentifier,\r\n            Html nvarchar(max)\r\n        )\r\n\r\n        INSERT INTO #SpecificationContent (LanguageCode, ProductId, Html)\r\n        SELECT\r\n            l.LanguageCode,\r\n            s.ProductId,\r\n            (SELECT TOP 1\r\n                c.Html\r\n            FROM [Content] c WITH (NOLOCK)\r\n            WHERE c.ContentManagerId = s.ContentManagerId AND NOT c.PublishToProductionOn IS NULL AND c.PublishToProductionOn <= @dateTimeNow\r\n            AND (c.LanguageId = l.Id or c.LanguageId = @defaultLanguageId)\r\n                ORDER BY\r\n                    CASE WHEN c.LanguageId = l.Id THEN 0 ELSE 1 END,\r\n                    c.PublishToProductionOn DESC)\r\n            AS Html\r\n        FROM Specification s WITH (NOLOCK)\r\n        JOIN Product p WITH (NOLOCK) ON p.Id = s.ProductId\r\n        JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n        WHERE p.IndexStatus <> 2\r\n        {1}\r\n        OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n        CREATE INDEX IDX_ProductId ON #SpecificationContent(LanguageCode, ProductId)\r\n\r\n        SELECT\r\n            l.LanguageCode,\r\n            --p.Id,\r\n            p.Id AS ProductId,\r\n            p.Name,\r\n            p.ERPNumber,\r\n            ISNULL(NULLIF(ptp.TranslatedValue,''), ISNULL(NULLIF(p.ShortDescription,''), p.erpdescription)) as ShortDescription,\r\n            p.SortOrder,\r\n            p.SearchBoost,\r\n            (SELECT top 1 ProductSearchBoost FROM #CategoryInfo c WHERE c.LanguageId = l.Id AND c.ProductId = p.Id order by ProductSearchBoost desc) as CategorySearchBoost,\r\n            p.ManufacturerItem,\r\n            (SELECT top 1 MediumImagePath FROM ProductImage pi WHERE pi.ProductId = p.Id ORDER BY pi.SortOrder) as MediumImagePath,\r\n            (SELECT top 1 (CASE WHEN SmallImagePath = '' THEN MediumImagePath ELSE SmallImagePath END) FROM ProductImage pi WHERE pi.ProductId = p.Id ORDER BY pi.SortOrder) as SmallImagePath,\r\n            p.UnitOfMeasure,\r\n            p.BasicListPrice,\r\n            p.BasicSalePrice,\r\n            p.BasicSaleStartDate,\r\n            p.BasicSaleEndDate,\r\n            p.ShippingWeight,\r\n            p.ActivateOn,\r\n            p.DeactivateOn,\r\n            p.SearchLookup,\r\n            p.DefaultVisibility,\r\n            p.UrlSegment,\r\n            p.ModifiedOn,\r\n            p.IsSponsored,\r\n            p.ProductCode,\r\n            p.ErpDescription,\r\n            p.MetaDescription,\r\n            p.MetaKeywords,\r\n            p.PageTitle,\r\n            p.ModelNumber,\r\n            p.Sku,\r\n            p.UpcCode,\r\n            p.Unspsc,\r\n            p.PackDescription,\r\n            p.UnitOfMeasureDescription,\r\n            (SELECT TOP 1 CONCAT(v.Name, ' ', v.VendorNumber) FROM Vendor v WHERE v.Id = p.VendorId) as Vendor,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT CHAR(255) + d.Name AS [text()]\r\n                        FROM Document d\r\n                        WHERE d.ParentId = p.Id\r\n                        FOR XML PATH ('')),\r\n                        ' '),\r\n                1, 1, '') AS DocumentNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT CHAR(255) + pi.AltText AS [text()]\r\n                        FROM ProductImage pi\r\n                        WHERE pi.ProductId = p.Id\r\n                        FOR XML PATH ('')),\r\n                        ' '),\r\n                1, 1, '') AS ImageAltText,\r\n            ISNULL(\r\n                (SELECT top 1 puom.QtyPerBaseUnitOfMeasure\r\n                    FROM ProductUnitOfMeasure puom\r\n                    WHERE puom.ProductId = p.Id AND puom.IsDefault = 1),\r\n                1) \r\n            *\r\n            (CASE\r\n                WHEN NOT p.BasicSaleStartDate IS NULL AND p.BasicSaleStartDate < @dateTimeNow AND (p.BasicSaleEndDate IS NULL OR p.BasicSaleEndDate > @dateTimeNow) THEN p.BasicSalePrice\r\n                ELSE p.BasicListPrice\r\n            END) AS Price,\r\n            (CASE WHEN (p.BasicListPrice <> 0) AND (p.IsConfigured = 0 OR p.IsFixedConfiguration = 1) AND (p.ConfigurationObjectId IS NULL) THEN\r\n                (CASE WHEN NOT p.BasicSaleStartDate IS NULL AND p.BasicSaleStartDate < @dateTimeNow AND (p.BasicSaleEndDate IS NULL OR p.BasicSaleEndDate > @dateTimeNow) THEN\r\n                    (CASE WHEN p.BasicSalePrice >= 10 THEN\r\n                        CAST(p.BasicSalePrice - p.BasicSalePrice % POWER(10,ROUND(LOG10(p.BasicSalePrice),0,1))as int)\r\n                    ELSE 0 END)\r\n                ELSE\r\n                    (CASE WHEN p.BasicListPrice >= 10 THEN\r\n                        CAST(p.BasicListPrice - p.BasicListPrice % POWER(10,ROUND(LOG10(p.BasicListPrice),0,1))as int)\r\n                    ELSE 0 END)\r\n                END)\r\n            ELSE null\r\n            END) AS PriceFacet,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + c.CategoryId + c.WebSiteId + c.ShortDescription AS [text()]\r\n                    FROM #CategoryInfo c\r\n                    WHERE c.LanguageId = l.Id AND c.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Categories,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + c.PersonaId AS [text()]\r\n                    FROM #CategoryInfo c\r\n                    WHERE c.LanguageId = l.Id AND c.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Personas,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + ct.CategoryTreeNames AS [text()]\r\n                    FROM #CategoryTree ct\r\n                    WHERE ct.ProductId = p.Id and ct.LanguageId = l.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS CategoryNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CategoryTree AS [text()]\r\n                    FROM #CategoryTree ct\r\n                    WHERE ct.ProductId = p.Id and ct.LanguageId = l.Id\r\n                    FOR XML PATH ('')),\r\n                     ' '),\r\n                1, 1, '') AS CategoryTree,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + c.WebSiteId AS [text()]\r\n                    FROM #CategoryInfo c\r\n                    WHERE c.LanguageId = l.Id AND c.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Websites,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT DISTINCT\r\n                        CHAR(255) + Filters AS [text()]\r\n                    FROM #Filters f\r\n                    WHERE (f.StyleParentId is null AND f.LanguageId = l.Id AND f.ProductId = p.Id) OR (f.StyleParentId is not null AND f.LanguageId = l.Id AND (f.ProductId = p.Id OR f.StyleParentId = p.Id))\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Filters,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT DISTINCT\r\n                        CHAR(255) + FilterNames AS [text()]\r\n                    FROM #Filters f\r\n                    WHERE (f.StyleParentId is null AND f.LanguageId = l.Id AND f.ProductId = p.Id) OR (f.StyleParentId is not null AND f.LanguageId = l.Id AND (f.ProductId = p.Id OR f.StyleParentId = p.Id))\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS FilterNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + sp.Name + CHAR(255) + sp.ERPNumber + CHAR(255) + sp.ManufacturerItem + CHAR(255) + stv.Value + CHAR(255) + st.Name + CHAR(255) + st.Description + CHAR(255) + sp.ProductCode + CHAR(255) + sp.ModelNumber AS [text()]\r\n                    FROM Product sp WITH (NOLOCK)\r\n                    INNER JOIN StyleTraitValueProduct stvp WITH (NOLOCK) on stvp.ProductId = sp.Id\r\n                    INNER JOIN StyleTraitValue stv WITH (NOLOCK) on stv.Id = stvp.StyleTraitValueId\r\n                    INNER JOIN StyleTrait st WITH (NOLOCK) on st.Id = stv.StyleTraitId\r\n                    WHERE sp.StyleParentId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS StyledChildren,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CAST(cp.CustomerId AS NVARCHAR(40)) + cp.Name AS [text()]\r\n                    FROM CustomerProduct cp WITH (NOLOCK)\r\n                    WHERE cp.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS CustomerNames,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CAST(cp.CustomerId AS NVARCHAR(40)) AS [text()]\r\n                    FROM CustomerProduct cp WITH (NOLOCK)\r\n                    WHERE cp.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS Customers,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT\r\n                        CHAR(255) + CAST(rgp.RestrictionGroupId AS NVARCHAR(40)) AS [text()]\r\n                    FROM RestrictionGroupProduct rgp WITH (NOLOCK)\r\n                    WHERE rgp.ProductId = p.Id\r\n                    FOR XML PATH ('')),\r\n                    ' '),\r\n                1, 1, '') AS RestrictionGroups,\r\n            ISNULL(pc.Html, ' ') AS Content,\r\n            ISNULL(\r\n                (SELECT\r\n                    ' ' + c.Html AS [text()] FROM #SpecificationContent c\r\n                WHERE c.LanguageCode = l.LanguageCode AND c.ProductId = p.Id\r\n                FOR XML PATH ('')),\r\n                ' ') AS Specifications,\r\n            STUFF(\r\n                ISNULL(\r\n                    (SELECT CONCAT(CHAR(255), pp.Name, CHAR(254), pp.Value)\r\n                        FROM CustomProperty pp WITH (NOLOCK)\r\n                        WHERE pp.ParentId = p.Id\r\n                        FOR XML PATH ('')),\r\n                        ' '),\r\n                1, 1, '') AS CustomProperties\r\n            {0} -- CustomFields\r\n            FROM Product p WITH (NOLOCK)\r\n            JOIN Language l WITH (NOLOCK) ON 1 = 1\r\n            LEFT JOIN TranslationProperty ptp WITH (NOLOCK) ON ptp.LanguageId = l.Id AND ptp.ParentId = p.Id AND ptp.Name = 'ShortDescription'\r\n            LEFT JOIN #ProductContent pc ON pc.LanguageCode = l.LanguageCode AND pc.ProductId = p.Id\r\n            WHERE p.StyleParentId IS NULL\r\n            AND (p.DeactivateOn IS NULL OR p.DeactivateOn > @dateTimeNow)\r\n            AND p.IndexStatus <> 2\r\n            AND (p.IsDiscontinued = 0 OR (pc.QtyOnHand > 0 AND p.TrackInventory = 1))\r\n            {1}\r\n            OPTION(OPTIMIZE FOR (@dateTimeNow = '99991231'))\r\n\r\n            DROP TABLE #Filters\r\n            DROP TABLE #CategoryTree\r\n            DROP TABLE #CategoryInfo\r\n            DROP TABLE #ProductContent\r\n            DROP TABLE #SpecificationContent\r\n            ";
            result.IncrementalFilter = parameter.IsIncremental ? " AND p.IndexStatus = 1" : string.Empty;
            return result;
        }
    }
}
